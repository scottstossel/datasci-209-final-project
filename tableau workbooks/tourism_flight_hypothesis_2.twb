<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.25.0208.0338                               -->
<workbook original-version='18.1' source-build='2024.3.4 (20243.25.0208.0338)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='tourism_flight_hypothesis_2' path='/workbooks' revision='1.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='df_cleaned_Inbound_Tourism_Arrivals.csv+ (Multiple Connections)' inline='true' name='federated.0100mdu08kc10s13g959s1as5vx9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_cleaned_Inbound_Tourism_Arrivals' name='textscan.0eunj3f16yqnfg15kb5e31tood4g'>
            <connection class='textscan' directory='/Users/gabriel/Developer/Berkeley/datasci-209-final-project/data/export' filename='df_cleaned_Inbound_Tourism_Arrivals.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='df_cleaned_Inbound_Tourism_Transport' name='textscan.0xivnxb1gw88rh17q9bmg03qo3pa'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='/Users/gabriel/Developer/Berkeley/datasci-209-final-project/data/export/df_cleaned_Inbound_Tourism_Transport.csv' dataRefreshTime='' directory='/Users/gabriel/Developer/Berkeley/datasci-209-final-project/data/export' filename='/var/folders/0y/g2tm105x5fj4b33ds4k_rtb00000gn/T/tableau-temp/0lhdyrj17pfhyc18kshls0beac8a/df_cleaned_Inbound_Tourism_Transport.csv.xlsx' interpretationMode='8' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='df_cleaned_Inbound_Tourism_Regions' name='textscan.1hnak0902ul9sk148jxnh15cuzgm'>
            <connection class='textscan' directory='/Users/gabriel/Developer/Berkeley/datasci-209-final-project/data/export' filename='df_cleaned_Inbound_Tourism_Regions.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation name='Pivot' type='pivot'>
            <columns>
              <column datatype='string' name='Pivot Field Names' />
              <column datatype='real' name='Pivot Field Values' />
            </columns>
            <tag name='Pivot Field Names'>
              <value name='[1995]' />
              <value name='[1996]' />
              <value name='[1997]' />
              <value name='[1998]' />
              <value name='[1999]' />
              <value name='[2000]' />
              <value name='[2001]' />
              <value name='[2002]' />
              <value name='[2003]' />
              <value name='[2004]' />
              <value name='[2005]' />
              <value name='[2006]' />
              <value name='[2007]' />
              <value name='[2008]' />
              <value name='[2009]' />
              <value name='[2010]' />
              <value name='[2011]' />
              <value name='[2012]' />
              <value name='[2013]' />
              <value name='[2014]' />
              <value name='[2015]' />
              <value name='[2016]' />
              <value name='[2017]' />
              <value name='[2018]' />
              <value name='[2019]' />
              <value name='[2020]' />
              <value name='[2021]' />
              <value name='[2022]' />
            </tag>
            <groups>
              <group name='Pivot Field Values'>
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[1995]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[1996]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[1997]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[1998]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[1999]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2000]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2001]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2002]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2003]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2004]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2005]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2006]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2007]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2008]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2009]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2010]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2011]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2012]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2013]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2014]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2015]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2016]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2017]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2018]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2019]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2020]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2021]' />
                <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2022]' />
              </group>
            </groups>
            <relation connection='textscan.0eunj3f16yqnfg15kb5e31tood4g' name='df_cleaned_Inbound_Tourism_Arrivals.csv' table='[/Users/gabriel/Developer/Berkeley/datasci-209-final-project/data/export/df_cleaned_Inbound_Tourism_Transport#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='string' name='Country' ordinal='0' />
                <column datatype='string' name='Arrival by mode of transport' ordinal='1' />
                <column datatype='real' name='1995' ordinal='2' />
                <column datatype='real' name='1996' ordinal='3' />
                <column datatype='real' name='1997' ordinal='4' />
                <column datatype='real' name='1998' ordinal='5' />
                <column datatype='real' name='1999' ordinal='6' />
                <column datatype='real' name='2000' ordinal='7' />
                <column datatype='real' name='2001' ordinal='8' />
                <column datatype='real' name='2002' ordinal='9' />
                <column datatype='real' name='2003' ordinal='10' />
                <column datatype='real' name='2004' ordinal='11' />
                <column datatype='real' name='2005' ordinal='12' />
                <column datatype='real' name='2006' ordinal='13' />
                <column datatype='real' name='2007' ordinal='14' />
                <column datatype='real' name='2008' ordinal='15' />
                <column datatype='real' name='2009' ordinal='16' />
                <column datatype='real' name='2010' ordinal='17' />
                <column datatype='real' name='2011' ordinal='18' />
                <column datatype='real' name='2012' ordinal='19' />
                <column datatype='real' name='2013' ordinal='20' />
                <column datatype='real' name='2014' ordinal='21' />
                <column datatype='real' name='2015' ordinal='22' />
                <column datatype='real' name='2016' ordinal='23' />
                <column datatype='real' name='2017' ordinal='24' />
                <column datatype='real' name='2018' ordinal='25' />
                <column datatype='real' name='2019' ordinal='26' />
                <column datatype='real' name='2020' ordinal='27' />
                <column datatype='real' name='2021' ordinal='28' />
                <column datatype='real' name='2022' ordinal='29' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.1hnak0902ul9sk148jxnh15cuzgm' name='df_cleaned_Inbound_Tourism_Regions.csv' table='[df_cleaned_Inbound_Tourism_Regions#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Arrival by Region' ordinal='1' />
              <column datatype='real' name='1995' ordinal='2' />
              <column datatype='real' name='1996' ordinal='3' />
              <column datatype='real' name='1997' ordinal='4' />
              <column datatype='real' name='1998' ordinal='5' />
              <column datatype='real' name='1999' ordinal='6' />
              <column datatype='real' name='2000' ordinal='7' />
              <column datatype='real' name='2001' ordinal='8' />
              <column datatype='real' name='2002' ordinal='9' />
              <column datatype='real' name='2003' ordinal='10' />
              <column datatype='real' name='2004' ordinal='11' />
              <column datatype='real' name='2005' ordinal='12' />
              <column datatype='real' name='2006' ordinal='13' />
              <column datatype='real' name='2007' ordinal='14' />
              <column datatype='real' name='2008' ordinal='15' />
              <column datatype='real' name='2009' ordinal='16' />
              <column datatype='real' name='2010' ordinal='17' />
              <column datatype='real' name='2011' ordinal='18' />
              <column datatype='real' name='2012' ordinal='19' />
              <column datatype='real' name='2013' ordinal='20' />
              <column datatype='real' name='2014' ordinal='21' />
              <column datatype='real' name='2015' ordinal='22' />
              <column datatype='real' name='2016' ordinal='23' />
              <column datatype='real' name='2017' ordinal='24' />
              <column datatype='real' name='2018' ordinal='25' />
              <column datatype='real' name='2019' ordinal='26' />
              <column datatype='real' name='2020' ordinal='27' />
              <column datatype='real' name='2021' ordinal='28' />
              <column datatype='real' name='2022' ordinal='29' />
            </columns>
          </relation>
          <relation connection='textscan.1hnak0902ul9sk148jxnh15cuzgm' name='df_cleaned_Inbound_Tourism_Transport.csv' table='[df_cleaned_Inbound_Tourism_Transport#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Arrival by mode of transport' ordinal='1' />
              <column datatype='real' name='1995' ordinal='2' />
              <column datatype='real' name='1996' ordinal='3' />
              <column datatype='real' name='1997' ordinal='4' />
              <column datatype='real' name='1998' ordinal='5' />
              <column datatype='real' name='1999' ordinal='6' />
              <column datatype='real' name='2000' ordinal='7' />
              <column datatype='real' name='2001' ordinal='8' />
              <column datatype='real' name='2002' ordinal='9' />
              <column datatype='real' name='2003' ordinal='10' />
              <column datatype='real' name='2004' ordinal='11' />
              <column datatype='real' name='2005' ordinal='12' />
              <column datatype='real' name='2006' ordinal='13' />
              <column datatype='real' name='2007' ordinal='14' />
              <column datatype='real' name='2008' ordinal='15' />
              <column datatype='real' name='2009' ordinal='16' />
              <column datatype='real' name='2010' ordinal='17' />
              <column datatype='real' name='2011' ordinal='18' />
              <column datatype='real' name='2012' ordinal='19' />
              <column datatype='real' name='2013' ordinal='20' />
              <column datatype='real' name='2014' ordinal='21' />
              <column datatype='real' name='2015' ordinal='22' />
              <column datatype='real' name='2016' ordinal='23' />
              <column datatype='real' name='2017' ordinal='24' />
              <column datatype='real' name='2018' ordinal='25' />
              <column datatype='real' name='2019' ordinal='26' />
              <column datatype='real' name='2020' ordinal='27' />
              <column datatype='real' name='2021' ordinal='28' />
              <column datatype='real' name='2022' ordinal='29' />
            </columns>
          </relation>
          <relation connection='textscan.0eunj3f16yqnfg15kb5e31tood4g' name='df_merged_arrivals.csv' table='[df_merged_arrivals#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='integer' name='Year' ordinal='1' />
              <column datatype='real' name='Tourist Arrivals' ordinal='2' />
              <column datatype='string' name='Flight Growth Category' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[1995 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[1995]' />
          <map key='[1995 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[1995]' />
          <map key='[1996 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[1996]' />
          <map key='[1996 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[1996]' />
          <map key='[1997 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[1997]' />
          <map key='[1997 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[1997]' />
          <map key='[1998 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[1998]' />
          <map key='[1998 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[1998]' />
          <map key='[1999 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[1999]' />
          <map key='[1999 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[1999]' />
          <map key='[2000 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[2000]' />
          <map key='[2000 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[2000]' />
          <map key='[2001 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[2001]' />
          <map key='[2001 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[2001]' />
          <map key='[2002 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[2002]' />
          <map key='[2002 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[2002]' />
          <map key='[2003 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[2003]' />
          <map key='[2003 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[2003]' />
          <map key='[2004 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[2004]' />
          <map key='[2004 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[2004]' />
          <map key='[2005 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[2005]' />
          <map key='[2005 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[2005]' />
          <map key='[2006 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[2006]' />
          <map key='[2006 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[2006]' />
          <map key='[2007 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[2007]' />
          <map key='[2007 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[2007]' />
          <map key='[2008 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[2008]' />
          <map key='[2008 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[2008]' />
          <map key='[2009 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[2009]' />
          <map key='[2009 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[2009]' />
          <map key='[2010 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[2010]' />
          <map key='[2010 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[2010]' />
          <map key='[2011 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[2011]' />
          <map key='[2011 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[2011]' />
          <map key='[2012 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[2012]' />
          <map key='[2012 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[2012]' />
          <map key='[2013 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[2013]' />
          <map key='[2013 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[2013]' />
          <map key='[2014 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[2014]' />
          <map key='[2014 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[2014]' />
          <map key='[2015 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[2015]' />
          <map key='[2015 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[2015]' />
          <map key='[2016 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[2016]' />
          <map key='[2016 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[2016]' />
          <map key='[2017 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[2017]' />
          <map key='[2017 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[2017]' />
          <map key='[2018 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[2018]' />
          <map key='[2018 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[2018]' />
          <map key='[2019 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[2019]' />
          <map key='[2019 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[2019]' />
          <map key='[2020 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[2020]' />
          <map key='[2020 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[2020]' />
          <map key='[2021 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[2021]' />
          <map key='[2021 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[2021]' />
          <map key='[2022 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[2022]' />
          <map key='[2022 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[2022]' />
          <map key='[Arrival by Region]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[Arrival by Region]' />
          <map key='[Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[Arrival by mode of transport]' />
          <map key='[Arrival by mode of transport]' value='[df_cleaned_Inbound_Tourism_Arrivals.csv].[Arrival by mode of transport]' />
          <map key='[Country (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv].[Country]' />
          <map key='[Country (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv].[Country]' />
          <map key='[Country (df_merged_arrivals.csv)]' value='[df_merged_arrivals.csv].[Country]' />
          <map key='[Country]' value='[df_cleaned_Inbound_Tourism_Arrivals.csv].[Country]' />
          <map key='[Flight Growth Category]' value='[df_merged_arrivals.csv].[Flight Growth Category]' />
          <map key='[Pivot Field Names]' value='[Pivot].[Pivot Field Names]' />
          <map key='[Pivot Field Values]' value='[Pivot].[Pivot Field Values]' />
          <map key='[Tourist Arrivals]' value='[df_merged_arrivals.csv].[Tourist Arrivals]' />
          <map key='[Year]' value='[df_merged_arrivals.csv].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_cleaned_Inbound_Tourism_Arrivals.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_merged_arrivals.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Arrivals.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_cleaned_Inbound_Tourism_Arrivals.csv_DA609FFED5F04D3A9386610C4088D625]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Arrival by mode of transport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Arrival by mode of transport]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Arrivals.csv]</parent-name>
            <remote-alias>Arrival by mode of transport</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_cleaned_Inbound_Tourism_Arrivals.csv_DA609FFED5F04D3A9386610C4088D625]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Names</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pivot Field Names]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Names</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Arrivals.csv_DA609FFED5F04D3A9386610C4088D625]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pivot Field Values]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Values</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Arrivals.csv_DA609FFED5F04D3A9386610C4088D625]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Arrival by Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Arrival by Region]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>Arrival by Region</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1995</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1995 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>1995</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1996</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1996 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>1996</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1997</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1997 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>1997</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1998</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1998 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>1998</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1999</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1999 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>1999</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2000 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>2000</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2001</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2001 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>2001</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2002</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2002 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>2002</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2003</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2003 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>2003</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2004</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2004 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>2004</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2005</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2005 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>2005</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2006</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2006 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>2006</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2007</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2007 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>2007</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2008</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2008 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>2008</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2009</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2009 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>2009</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2010 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>2010</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2011</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2011 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>2011</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2012</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2012 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>2012</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2013</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2013 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>2013</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2014</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2014 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>2014</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2015</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2015 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>2015</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2016 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>2016</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2017 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>2017</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>2018</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2019</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2019 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>2019</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2020</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2020 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>2020</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2021</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2021 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>2021</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2022</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2022 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv]</parent-name>
            <remote-alias>2022</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Arrival by mode of transport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>Arrival by mode of transport</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1995</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1995 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>1995</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1996</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1996 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>1996</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1997</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1997 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>1997</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1998</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1998 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>1998</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1999</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1999 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>1999</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2000 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>2000</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2001</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2001 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>2001</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2002</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2002 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>2002</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2003</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2003 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>2003</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2004</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2004 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>2004</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2005</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2005 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>2005</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2006</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2006 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>2006</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2007</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2007 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>2007</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2008</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2008 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>2008</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2009</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2009 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>2009</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2010 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>2010</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2011</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2011 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>2011</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2012</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2012 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>2012</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2013</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2013 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>2013</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2014</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2014 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>2014</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2015</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2015 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>2015</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2016 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>2016</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2017 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>2017</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>2018</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2019</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2019 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>2019</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2020</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2020 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>2020</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2021</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2021 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>2021</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2022</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2022 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
            <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv]</parent-name>
            <remote-alias>2022</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (df_merged_arrivals.csv)]</local-name>
            <parent-name>[df_merged_arrivals.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>64</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_merged_arrivals.csv_83DA91513F3048C7A00C4DED008091B4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[df_merged_arrivals.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>65</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_merged_arrivals.csv_83DA91513F3048C7A00C4DED008091B4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tourist Arrivals</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tourist Arrivals]</local-name>
            <parent-name>[df_merged_arrivals.csv]</parent-name>
            <remote-alias>Tourist Arrivals</remote-alias>
            <ordinal>66</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_merged_arrivals.csv_83DA91513F3048C7A00C4DED008091B4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flight Growth Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Flight Growth Category]</local-name>
            <parent-name>[df_merged_arrivals.csv]</parent-name>
            <remote-alias>Flight Growth Category</remote-alias>
            <ordinal>67</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_merged_arrivals.csv_83DA91513F3048C7A00C4DED008091B4]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Arrival by Region]' role='dimension' type='nominal' />
      <column datatype='string' name='[Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv)]' role='dimension' type='nominal' />
      <column caption='Flight Growth Category' datatype='string' name='[Calculation_748442019169021953]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM(IF [Arrival by mode of transport] = &apos;Air&apos; AND INT([Pivot Field Names]) = 2022 THEN [Pivot Field Values] END)&#10;   &gt; SUM(IF [Arrival by mode of transport] = &apos;Air&apos; AND INT([Pivot Field Names]) = 2010 THEN [Pivot Field Values] END) * 1.5&#10;THEN &quot;Low Increase in Direct Flights&quot;&#10;ELSE &quot;High Increase in Direct Flights&quot;&#10;END' />
      </column>
      <column caption='Tourism Growth Rate (%)' datatype='real' name='[Calculation_748442019178061831]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ZN(SUM(IF INT([Pivot Field Names]) = 2022 THEN [Pivot Field Values] END)) &gt; 0 &#10;AND ZN(SUM(IF INT([Pivot Field Names]) = 2010 THEN [Pivot Field Values] END)) &gt; 0&#10;THEN &#10;    ((SUM(IF INT([Pivot Field Names]) = 2022 THEN [Pivot Field Values] END) - SUM(IF INT([Pivot Field Names]) = 2010 THEN [Pivot Field Values] END)) &#10;    / SUM(IF INT([Pivot Field Names]) = 2010 THEN [Pivot Field Values] END)) * 100&#10;ELSE NULL&#10;END' />
      </column>
      <column caption='Total Direct Flights' datatype='real' name='[Calculation_748442019178319880]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Country]: SUM(IF [Arrival by mode of transport] = &apos;Air&apos; THEN [Pivot Field Values] END) }' />
      </column>
      <column caption='Total Air Arrivals' datatype='real' name='[Calculation_748442019182886921]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Pivot Field Names]: SUM(IF [Arrival by mode of transport] = &apos;Air&apos; THEN [Pivot Field Values] END) }' />
      </column>
      <column datatype='string' name='[Country (df_cleaned_Inbound_Tourism_Regions.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country (df_cleaned_Inbound_Tourism_Transport.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country (df merged arrivals.csv)' datatype='string' name='[Country (df_merged_arrivals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;LAO PEOPLE´S DEMOCRATIC REPUBLIC&quot;' value='&quot;Dominican Republic&quot;' />
          <semantic-value key='&quot;SABA&quot;' value='&quot;Bonaire, Saint Eustatius and Saba&quot;' />
          <semantic-value key='&quot;SINT EUSTATIUS&quot;' value='&quot;Bonaire, Saint Eustatius and Saba&quot;' />
          <semantic-value key='&quot;TAIWAN PROVINCE OF CHINA&quot;' value='&quot;Taiwan&quot;' />
        </semantic-values>
      </column>
      <column caption='Flight Growth Category1' datatype='string' name='[Flight Growth Category]' role='dimension' type='nominal' />
      <column caption='Year' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
      <column caption='Tourist Arrivals' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
      <column caption='Tourist Arrivals1' datatype='real' name='[Tourist Arrivals]' role='measure' type='quantitative' />
      <column caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Arrivals' datatype='table' name='[__tableau_internal_object_id__].[df_cleaned_Inbound_Tourism_Arrivals.csv_DA609FFED5F04D3A9386610C4088D625]' role='measure' type='quantitative' />
      <column caption='Regions' datatype='table' name='[__tableau_internal_object_id__].[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]' role='measure' type='quantitative' />
      <column caption='Transport' datatype='table' name='[__tableau_internal_object_id__].[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]' role='measure' type='quantitative' />
      <column caption='df_merged_arrivals.csv' datatype='table' name='[__tableau_internal_object_id__].[df_merged_arrivals.csv_83DA91513F3048C7A00C4DED008091B4]' role='measure' type='quantitative' />
      <column-instance column='[Arrival by Region]' derivation='None' name='[none:Arrival by Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv)]' derivation='None' name='[none:Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[Flight Growth Category]' derivation='None' name='[none:Flight Growth Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,Flight Growth Category1)' hidden='true' name='[Action (Country,Flight Growth Category1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[Flight Growth Category]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/gabriel/Documents/My Tableau Repository/Datasources/df_cleaned_Inbound_Tourism_Arrivals.csv+ (Multiple Connections).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/14/2025 04:57:26 PM' username='tableau_internal_user'>
          <relation type='collection'>
            <relation name='df_cleaned_Inbound_Tourism_Arrivals.csv_DA609FFED5F04D3A9386610C4088D625' table='[Extract].[df_cleaned_Inbound_Tourism_Arrivals.csv_DA609FFED5F04D3A9386610C4088D625]' type='table' />
            <relation name='df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6' table='[Extract].[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]' type='table' />
            <relation name='df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E' table='[Extract].[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]' type='table' />
            <relation name='df_merged_arrivals.csv_83DA91513F3048C7A00C4DED008091B4' table='[Extract].[df_merged_arrivals.csv_83DA91513F3048C7A00C4DED008091B4]' type='table' />
          </relation>
          <cols>
            <map key='[1995 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[1995]' />
            <map key='[1995 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[1995]' />
            <map key='[1996 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[1996]' />
            <map key='[1996 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[1996]' />
            <map key='[1997 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[1997]' />
            <map key='[1997 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[1997]' />
            <map key='[1998 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[1998]' />
            <map key='[1998 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[1998]' />
            <map key='[1999 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[1999]' />
            <map key='[1999 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[1999]' />
            <map key='[2000 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[2000]' />
            <map key='[2000 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[2000]' />
            <map key='[2001 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[2001]' />
            <map key='[2001 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[2001]' />
            <map key='[2002 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[2002]' />
            <map key='[2002 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[2002]' />
            <map key='[2003 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[2003]' />
            <map key='[2003 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[2003]' />
            <map key='[2004 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[2004]' />
            <map key='[2004 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[2004]' />
            <map key='[2005 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[2005]' />
            <map key='[2005 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[2005]' />
            <map key='[2006 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[2006]' />
            <map key='[2006 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[2006]' />
            <map key='[2007 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[2007]' />
            <map key='[2007 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[2007]' />
            <map key='[2008 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[2008]' />
            <map key='[2008 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[2008]' />
            <map key='[2009 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[2009]' />
            <map key='[2009 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[2009]' />
            <map key='[2010 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[2010]' />
            <map key='[2010 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[2010]' />
            <map key='[2011 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[2011]' />
            <map key='[2011 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[2011]' />
            <map key='[2012 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[2012]' />
            <map key='[2012 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[2012]' />
            <map key='[2013 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[2013]' />
            <map key='[2013 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[2013]' />
            <map key='[2014 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[2014]' />
            <map key='[2014 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[2014]' />
            <map key='[2015 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[2015]' />
            <map key='[2015 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[2015]' />
            <map key='[2016 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[2016]' />
            <map key='[2016 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[2016]' />
            <map key='[2017 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[2017]' />
            <map key='[2017 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[2017]' />
            <map key='[2018 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[2018]' />
            <map key='[2018 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[2018]' />
            <map key='[2019 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[2019]' />
            <map key='[2019 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[2019]' />
            <map key='[2020 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[2020]' />
            <map key='[2020 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[2020]' />
            <map key='[2021 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[2021]' />
            <map key='[2021 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[2021]' />
            <map key='[2022 (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[2022]' />
            <map key='[2022 (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[2022]' />
            <map key='[Arrival by Region]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[Arrival by Region]' />
            <map key='[Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[Arrival by mode of transport]' />
            <map key='[Arrival by mode of transport]' value='[df_cleaned_Inbound_Tourism_Arrivals.csv_DA609FFED5F04D3A9386610C4088D625].[Arrival by mode of transport]' />
            <map key='[Country (df_cleaned_Inbound_Tourism_Regions.csv)]' value='[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6].[Country]' />
            <map key='[Country (df_cleaned_Inbound_Tourism_Transport.csv)]' value='[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E].[Country]' />
            <map key='[Country (df_merged_arrivals.csv)]' value='[df_merged_arrivals.csv_83DA91513F3048C7A00C4DED008091B4].[Country]' />
            <map key='[Country]' value='[df_cleaned_Inbound_Tourism_Arrivals.csv_DA609FFED5F04D3A9386610C4088D625].[Country]' />
            <map key='[Flight Growth Category]' value='[df_merged_arrivals.csv_83DA91513F3048C7A00C4DED008091B4].[Flight Growth Category]' />
            <map key='[Pivot Field Names]' value='[df_cleaned_Inbound_Tourism_Arrivals.csv_DA609FFED5F04D3A9386610C4088D625].[Pivot Field Names]' />
            <map key='[Pivot Field Values]' value='[df_cleaned_Inbound_Tourism_Arrivals.csv_DA609FFED5F04D3A9386610C4088D625].[Pivot Field Values]' />
            <map key='[Tourist Arrivals]' value='[df_merged_arrivals.csv_83DA91513F3048C7A00C4DED008091B4].[Tourist Arrivals]' />
            <map key='[Year]' value='[df_merged_arrivals.csv_83DA91513F3048C7A00C4DED008091B4].[Year]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='df_cleaned_Inbound_Tourism_Arrivals.csv+ (Multiple Connections)' increment-value='%null%' refresh-type='create' rows-inserted='20196' timestamp-start='2025-04-14 16:57:25.017' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Arrivals.csv_DA609FFED5F04D3A9386610C4088D625]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>0</ordinal>
              <family>df_cleaned_Inbound_Tourism_Arrivals.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>197</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_cleaned_Inbound_Tourism_Arrivals.csv_DA609FFED5F04D3A9386610C4088D625]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Arrival by mode of transport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Arrival by mode of transport]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Arrivals.csv_DA609FFED5F04D3A9386610C4088D625]</parent-name>
              <remote-alias>Arrival by mode of transport</remote-alias>
              <ordinal>1</ordinal>
              <family>df_cleaned_Inbound_Tourism_Arrivals.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_cleaned_Inbound_Tourism_Arrivals.csv_DA609FFED5F04D3A9386610C4088D625]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pivot Field Names</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Pivot Field Names]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Arrivals.csv_DA609FFED5F04D3A9386610C4088D625]</parent-name>
              <remote-alias>Pivot Field Names</remote-alias>
              <ordinal>2</ordinal>
              <family>Pivot</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>28</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[df_cleaned_Inbound_Tourism_Arrivals.csv_DA609FFED5F04D3A9386610C4088D625]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pivot Field Values</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Pivot Field Values]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Arrivals.csv_DA609FFED5F04D3A9386610C4088D625]</parent-name>
              <remote-alias>Pivot Field Values</remote-alias>
              <ordinal>3</ordinal>
              <family>Pivot</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2754</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Arrivals.csv_DA609FFED5F04D3A9386610C4088D625]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>4</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>194</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Arrival by Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Arrival by Region]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>Arrival by Region</remote-alias>
              <ordinal>5</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1995</remote-name>
              <remote-type>5</remote-type>
              <local-name>[1995 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>1995</remote-alias>
              <ordinal>6</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>330</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1996</remote-name>
              <remote-type>5</remote-type>
              <local-name>[1996 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>1996</remote-alias>
              <ordinal>7</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>341</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1997</remote-name>
              <remote-type>5</remote-type>
              <local-name>[1997 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>1997</remote-alias>
              <ordinal>8</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>355</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1998</remote-name>
              <remote-type>5</remote-type>
              <local-name>[1998 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>1998</remote-alias>
              <ordinal>9</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>367</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1999</remote-name>
              <remote-type>5</remote-type>
              <local-name>[1999 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>1999</remote-alias>
              <ordinal>10</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>356</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2000</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2000 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>2000</remote-alias>
              <ordinal>11</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>382</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2001</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2001 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>2001</remote-alias>
              <ordinal>12</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>374</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2002</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2002 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>2002</remote-alias>
              <ordinal>13</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>381</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2003</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2003 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>2003</remote-alias>
              <ordinal>14</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>395</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2004</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2004 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>2004</remote-alias>
              <ordinal>15</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>404</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2005</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2005 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>2005</remote-alias>
              <ordinal>16</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>421</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2006</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2006 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>2006</remote-alias>
              <ordinal>17</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>423</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2007</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2007 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>2007</remote-alias>
              <ordinal>18</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>444</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2008</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2008 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>2008</remote-alias>
              <ordinal>19</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>457</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2009</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2009 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>2009</remote-alias>
              <ordinal>20</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>477</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2010</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2010 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>2010</remote-alias>
              <ordinal>21</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>502</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2011</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2011 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>2011</remote-alias>
              <ordinal>22</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>532</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2012</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2012 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>2012</remote-alias>
              <ordinal>23</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>591</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2013</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2013 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>2013</remote-alias>
              <ordinal>24</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>635</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2014</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2014 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>2014</remote-alias>
              <ordinal>25</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>691</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2015</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2015 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>2015</remote-alias>
              <ordinal>26</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>695</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2016</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2016 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>2016</remote-alias>
              <ordinal>27</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>700</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2017</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2017 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>2017</remote-alias>
              <ordinal>28</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>737</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2018</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2018 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>2018</remote-alias>
              <ordinal>29</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>728</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2019</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2019 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>2019</remote-alias>
              <ordinal>30</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>735</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2020</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2020 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>2020</remote-alias>
              <ordinal>31</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>549</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2021</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2021 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>2021</remote-alias>
              <ordinal>32</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>521</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2022</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2022 (df_cleaned_Inbound_Tourism_Regions.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</parent-name>
              <remote-alias>2022</remote-alias>
              <ordinal>33</ordinal>
              <family>df_cleaned_Inbound_Tourism_Regions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>530</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>34</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>194</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Arrival by mode of transport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>Arrival by mode of transport</remote-alias>
              <ordinal>35</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1995</remote-name>
              <remote-type>5</remote-type>
              <local-name>[1995 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>1995</remote-alias>
              <ordinal>36</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>266</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1996</remote-name>
              <remote-type>5</remote-type>
              <local-name>[1996 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>1996</remote-alias>
              <ordinal>37</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>274</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1997</remote-name>
              <remote-type>5</remote-type>
              <local-name>[1997 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>1997</remote-alias>
              <ordinal>38</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>286</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1998</remote-name>
              <remote-type>5</remote-type>
              <local-name>[1998 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>1998</remote-alias>
              <ordinal>39</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>297</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1999</remote-name>
              <remote-type>5</remote-type>
              <local-name>[1999 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>1999</remote-alias>
              <ordinal>40</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>296</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2000</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2000 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>2000</remote-alias>
              <ordinal>41</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>307</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2001</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2001 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>2001</remote-alias>
              <ordinal>42</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>329</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2002</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2002 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>2002</remote-alias>
              <ordinal>43</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>316</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2003</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2003 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>2003</remote-alias>
              <ordinal>44</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>306</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2004</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2004 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>2004</remote-alias>
              <ordinal>45</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>322</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2005</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2005 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>2005</remote-alias>
              <ordinal>46</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>327</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2006</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2006 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>2006</remote-alias>
              <ordinal>47</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>338</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2007</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2007 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>2007</remote-alias>
              <ordinal>48</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>337</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2008</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2008 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>2008</remote-alias>
              <ordinal>49</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>333</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2009</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2009 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>2009</remote-alias>
              <ordinal>50</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>331</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2010</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2010 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>2010</remote-alias>
              <ordinal>51</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>342</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2011</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2011 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>2011</remote-alias>
              <ordinal>52</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>349</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2012</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2012 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>2012</remote-alias>
              <ordinal>53</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>350</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2013</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2013 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>2013</remote-alias>
              <ordinal>54</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>347</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2014</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2014 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>2014</remote-alias>
              <ordinal>55</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>352</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2015</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2015 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>2015</remote-alias>
              <ordinal>56</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>360</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2016</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2016 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>2016</remote-alias>
              <ordinal>57</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>376</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2017</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2017 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>2017</remote-alias>
              <ordinal>58</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>375</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2018</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2018 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>2018</remote-alias>
              <ordinal>59</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>360</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2019</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2019 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>2019</remote-alias>
              <ordinal>60</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>354</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2020</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2020 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>2020</remote-alias>
              <ordinal>61</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>316</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2021</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2021 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>2021</remote-alias>
              <ordinal>62</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>291</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2022</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2022 (df_cleaned_Inbound_Tourism_Transport.csv)]</local-name>
              <parent-name>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</parent-name>
              <remote-alias>2022</remote-alias>
              <ordinal>63</ordinal>
              <family>df_cleaned_Inbound_Tourism_Transport.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>259</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (df_merged_arrivals.csv)]</local-name>
              <parent-name>[df_merged_arrivals.csv_83DA91513F3048C7A00C4DED008091B4]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>64</ordinal>
              <family>df_merged_arrivals.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>194</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_merged_arrivals.csv_83DA91513F3048C7A00C4DED008091B4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[df_merged_arrivals.csv_83DA91513F3048C7A00C4DED008091B4]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>65</ordinal>
              <family>df_merged_arrivals.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_merged_arrivals.csv_83DA91513F3048C7A00C4DED008091B4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tourist Arrivals</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Tourist Arrivals]</local-name>
              <parent-name>[df_merged_arrivals.csv_83DA91513F3048C7A00C4DED008091B4]</parent-name>
              <remote-alias>Tourist Arrivals</remote-alias>
              <ordinal>66</ordinal>
              <family>df_merged_arrivals.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2171</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_merged_arrivals.csv_83DA91513F3048C7A00C4DED008091B4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Flight Growth Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Flight Growth Category]</local-name>
              <parent-name>[df_merged_arrivals.csv_83DA91513F3048C7A00C4DED008091B4]</parent-name>
              <remote-alias>Flight Growth Category</remote-alias>
              <ordinal>67</ordinal>
              <family>df_merged_arrivals.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_merged_arrivals.csv_83DA91513F3048C7A00C4DED008091B4]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[none:Arrival by Region:nk]'>
          <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
            <groupfilter function='member' level='[none:Arrival by Region:nk]' member='&quot;Africa&quot;' />
            <groupfilter function='member' level='[none:Arrival by Region:nk]' member='&quot;Americas&quot;' />
            <groupfilter function='member' level='[none:Arrival by Region:nk]' member='&quot;East Asia and the Pacific&quot;' />
            <groupfilter function='member' level='[none:Arrival by Region:nk]' member='&quot;Europe&quot;' />
            <groupfilter function='member' level='[none:Arrival by Region:nk]' member='&quot;Middle East&quot;' />
            <groupfilter function='member' level='[none:Arrival by Region:nk]' member='&quot;Other not classified&quot;' />
            <groupfilter function='member' level='[none:Arrival by Region:nk]' member='&quot;South Asia&quot;' />
          </groupfilter>
          <target field='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by Region:nk]' />
        </filter>
        <filter class='categorical' column='[none:Flight Growth Category:nk]'>
          <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
            <groupfilter function='member' level='[none:Flight Growth Category:nk]' member='%null%' />
            <groupfilter function='member' level='[none:Flight Growth Category:nk]' member='&quot;High Increase in Direct Flights&quot;' />
            <groupfilter function='member' level='[none:Flight Growth Category:nk]' member='&quot;Low Increase in Direct Flights&quot;' />
          </groupfilter>
          <target field='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Flight Growth Category:nk]' />
        </filter>
        <filter class='quantitative' column='[none:Year:qk]' included-values='in-range'>
          <min>1995</min>
          <max>2022</max>
          <target field='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Year:qk]' />
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Water&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Land&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Air&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Flight Growth Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;High Increase in Direct Flights&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Low Increase in Direct Flights&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Arrivals' id='df_cleaned_Inbound_Tourism_Arrivals.csv_DA609FFED5F04D3A9386610C4088D625'>
            <properties context=''>
              <relation name='Pivot' type='pivot'>
                <columns>
                  <column datatype='string' name='Pivot Field Names' />
                  <column datatype='real' name='Pivot Field Values' />
                </columns>
                <tag name='Pivot Field Names'>
                  <value name='[1995]' />
                  <value name='[1996]' />
                  <value name='[1997]' />
                  <value name='[1998]' />
                  <value name='[1999]' />
                  <value name='[2000]' />
                  <value name='[2001]' />
                  <value name='[2002]' />
                  <value name='[2003]' />
                  <value name='[2004]' />
                  <value name='[2005]' />
                  <value name='[2006]' />
                  <value name='[2007]' />
                  <value name='[2008]' />
                  <value name='[2009]' />
                  <value name='[2010]' />
                  <value name='[2011]' />
                  <value name='[2012]' />
                  <value name='[2013]' />
                  <value name='[2014]' />
                  <value name='[2015]' />
                  <value name='[2016]' />
                  <value name='[2017]' />
                  <value name='[2018]' />
                  <value name='[2019]' />
                  <value name='[2020]' />
                  <value name='[2021]' />
                  <value name='[2022]' />
                </tag>
                <groups>
                  <group name='Pivot Field Values'>
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[1995]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[1996]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[1997]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[1998]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[1999]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2000]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2001]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2002]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2003]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2004]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2005]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2006]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2007]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2008]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2009]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2010]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2011]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2012]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2013]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2014]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2015]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2016]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2017]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2018]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2019]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2020]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2021]' />
                    <field name='[df_cleaned_Inbound_Tourism_Arrivals.csv].[2022]' />
                  </group>
                </groups>
                <relation connection='textscan.0eunj3f16yqnfg15kb5e31tood4g' name='df_cleaned_Inbound_Tourism_Arrivals.csv' table='[/Users/gabriel/Developer/Berkeley/datasci-209-final-project/data/export/df_cleaned_Inbound_Tourism_Transport#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='string' name='Country' ordinal='0' />
                    <column datatype='string' name='Arrival by mode of transport' ordinal='1' />
                    <column datatype='real' name='1995' ordinal='2' />
                    <column datatype='real' name='1996' ordinal='3' />
                    <column datatype='real' name='1997' ordinal='4' />
                    <column datatype='real' name='1998' ordinal='5' />
                    <column datatype='real' name='1999' ordinal='6' />
                    <column datatype='real' name='2000' ordinal='7' />
                    <column datatype='real' name='2001' ordinal='8' />
                    <column datatype='real' name='2002' ordinal='9' />
                    <column datatype='real' name='2003' ordinal='10' />
                    <column datatype='real' name='2004' ordinal='11' />
                    <column datatype='real' name='2005' ordinal='12' />
                    <column datatype='real' name='2006' ordinal='13' />
                    <column datatype='real' name='2007' ordinal='14' />
                    <column datatype='real' name='2008' ordinal='15' />
                    <column datatype='real' name='2009' ordinal='16' />
                    <column datatype='real' name='2010' ordinal='17' />
                    <column datatype='real' name='2011' ordinal='18' />
                    <column datatype='real' name='2012' ordinal='19' />
                    <column datatype='real' name='2013' ordinal='20' />
                    <column datatype='real' name='2014' ordinal='21' />
                    <column datatype='real' name='2015' ordinal='22' />
                    <column datatype='real' name='2016' ordinal='23' />
                    <column datatype='real' name='2017' ordinal='24' />
                    <column datatype='real' name='2018' ordinal='25' />
                    <column datatype='real' name='2019' ordinal='26' />
                    <column datatype='real' name='2020' ordinal='27' />
                    <column datatype='real' name='2021' ordinal='28' />
                    <column datatype='real' name='2022' ordinal='29' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='df_cleaned_Inbound_Tourism_Arrivals.csv_DA609FFED5F04D3A9386610C4088D625' table='[Extract].[df_cleaned_Inbound_Tourism_Arrivals.csv_DA609FFED5F04D3A9386610C4088D625]' type='table' />
            </properties>
          </object>
          <object caption='Regions' id='df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6'>
            <properties context=''>
              <relation connection='textscan.1hnak0902ul9sk148jxnh15cuzgm' name='df_cleaned_Inbound_Tourism_Regions.csv' table='[df_cleaned_Inbound_Tourism_Regions#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='string' name='Arrival by Region' ordinal='1' />
                  <column datatype='real' name='1995' ordinal='2' />
                  <column datatype='real' name='1996' ordinal='3' />
                  <column datatype='real' name='1997' ordinal='4' />
                  <column datatype='real' name='1998' ordinal='5' />
                  <column datatype='real' name='1999' ordinal='6' />
                  <column datatype='real' name='2000' ordinal='7' />
                  <column datatype='real' name='2001' ordinal='8' />
                  <column datatype='real' name='2002' ordinal='9' />
                  <column datatype='real' name='2003' ordinal='10' />
                  <column datatype='real' name='2004' ordinal='11' />
                  <column datatype='real' name='2005' ordinal='12' />
                  <column datatype='real' name='2006' ordinal='13' />
                  <column datatype='real' name='2007' ordinal='14' />
                  <column datatype='real' name='2008' ordinal='15' />
                  <column datatype='real' name='2009' ordinal='16' />
                  <column datatype='real' name='2010' ordinal='17' />
                  <column datatype='real' name='2011' ordinal='18' />
                  <column datatype='real' name='2012' ordinal='19' />
                  <column datatype='real' name='2013' ordinal='20' />
                  <column datatype='real' name='2014' ordinal='21' />
                  <column datatype='real' name='2015' ordinal='22' />
                  <column datatype='real' name='2016' ordinal='23' />
                  <column datatype='real' name='2017' ordinal='24' />
                  <column datatype='real' name='2018' ordinal='25' />
                  <column datatype='real' name='2019' ordinal='26' />
                  <column datatype='real' name='2020' ordinal='27' />
                  <column datatype='real' name='2021' ordinal='28' />
                  <column datatype='real' name='2022' ordinal='29' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6' table='[Extract].[df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6]' type='table' />
            </properties>
          </object>
          <object caption='Transport' id='df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E'>
            <properties context=''>
              <relation connection='textscan.1hnak0902ul9sk148jxnh15cuzgm' name='df_cleaned_Inbound_Tourism_Transport.csv' table='[df_cleaned_Inbound_Tourism_Transport#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='string' name='Arrival by mode of transport' ordinal='1' />
                  <column datatype='real' name='1995' ordinal='2' />
                  <column datatype='real' name='1996' ordinal='3' />
                  <column datatype='real' name='1997' ordinal='4' />
                  <column datatype='real' name='1998' ordinal='5' />
                  <column datatype='real' name='1999' ordinal='6' />
                  <column datatype='real' name='2000' ordinal='7' />
                  <column datatype='real' name='2001' ordinal='8' />
                  <column datatype='real' name='2002' ordinal='9' />
                  <column datatype='real' name='2003' ordinal='10' />
                  <column datatype='real' name='2004' ordinal='11' />
                  <column datatype='real' name='2005' ordinal='12' />
                  <column datatype='real' name='2006' ordinal='13' />
                  <column datatype='real' name='2007' ordinal='14' />
                  <column datatype='real' name='2008' ordinal='15' />
                  <column datatype='real' name='2009' ordinal='16' />
                  <column datatype='real' name='2010' ordinal='17' />
                  <column datatype='real' name='2011' ordinal='18' />
                  <column datatype='real' name='2012' ordinal='19' />
                  <column datatype='real' name='2013' ordinal='20' />
                  <column datatype='real' name='2014' ordinal='21' />
                  <column datatype='real' name='2015' ordinal='22' />
                  <column datatype='real' name='2016' ordinal='23' />
                  <column datatype='real' name='2017' ordinal='24' />
                  <column datatype='real' name='2018' ordinal='25' />
                  <column datatype='real' name='2019' ordinal='26' />
                  <column datatype='real' name='2020' ordinal='27' />
                  <column datatype='real' name='2021' ordinal='28' />
                  <column datatype='real' name='2022' ordinal='29' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E' table='[Extract].[df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E]' type='table' />
            </properties>
          </object>
          <object caption='df_merged_arrivals.csv' id='df_merged_arrivals.csv_83DA91513F3048C7A00C4DED008091B4'>
            <properties context=''>
              <relation connection='textscan.0eunj3f16yqnfg15kb5e31tood4g' name='df_merged_arrivals.csv' table='[df_merged_arrivals#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='real' name='Tourist Arrivals' ordinal='2' />
                  <column datatype='string' name='Flight Growth Category' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='df_merged_arrivals.csv_83DA91513F3048C7A00C4DED008091B4' table='[Extract].[df_merged_arrivals.csv_83DA91513F3048C7A00C4DED008091B4]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[Country (df_cleaned_Inbound_Tourism_Regions.csv)]' />
            </expression>
            <first-end-point object-id='df_cleaned_Inbound_Tourism_Arrivals.csv_DA609FFED5F04D3A9386610C4088D625' />
            <second-end-point object-id='df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Country (df_cleaned_Inbound_Tourism_Regions.csv)]' />
              <expression op='[Country (df_cleaned_Inbound_Tourism_Transport.csv)]' />
            </expression>
            <first-end-point object-id='df_cleaned_Inbound_Tourism_Regions.csv_A0659D88F36B4438AACF80325643E3A6' />
            <second-end-point object-id='df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Country (df_cleaned_Inbound_Tourism_Transport.csv)]' />
              <expression op='[Country (df_merged_arrivals.csv)]' />
            </expression>
            <first-end-point object-id='df_cleaned_Inbound_Tourism_Transport.csv_B533345FC8CB4C239EFBD068BFD7520E' />
            <second-end-point object-id='df_merged_arrivals.csv_83DA91513F3048C7A00C4DED008091B4' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0100mdu08kc10s13g959s1as5vx9'>
      <datasources>
        <datasource caption='df_cleaned_Inbound_Tourism_Arrivals.csv+ (Multiple Connections)' name='federated.0100mdu08kc10s13g959s1as5vx9' />
      </datasources>
      <datasource-dependencies datasource='federated.0100mdu08kc10s13g959s1as5vx9'>
        <column datatype='string' name='[Arrival by Region]' role='dimension' type='nominal' />
        <column caption='Flight Growth Category1' datatype='string' name='[Flight Growth Category]' role='dimension' type='nominal' />
        <column caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Arrival by Region]' derivation='None' name='[none:Arrival by Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Flight Growth Category]' derivation='None' name='[none:Flight Growth Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by Region:nk]' context='true'>
        <groupfilter function='level-members' level='[none:Arrival by Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by Region:nk]' />
      </filter>
      <filter class='categorical' column='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Flight Growth Category:nk]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Flight Growth Category:nk]' member='%null%' />
          <groupfilter function='member' level='[none:Flight Growth Category:nk]' member='&quot;High Increase in Direct Flights&quot;' />
          <groupfilter function='member' level='[none:Flight Growth Category:nk]' member='&quot;Low Increase in Direct Flights&quot;' />
        </groupfilter>
        <target field='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Flight Growth Category:nk]' />
      </filter>
      <filter class='quantitative' column='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Year:qk]' included-values='in-range'>
        <min>1995</min>
        <max>2022</max>
        <target field='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Year:qk]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_34E287F013514B67924C83B7526D6391]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Tourism Growth Trends' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Flight Growth Category1' />
        <param name='target' value='Tourism Growth Trends' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2_0840D879D6644BD19E67D2BD154E493D]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Tourism by Transport' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv)' />
        <param name='target' value='Tourism by Transport' />
      </command>
    </action>
    <action caption='Highlight 3 (generated)' name='[Action3_97004109F2E6425CB9B0E1887669490F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Global Tourism Dashboard' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv)' />
        <param name='target' value='Global Tourism Dashboard' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action4_1C0D7A6640154A7FB75DCFE8C906A41C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Global Tourism Dashboard' type='sheet' worksheet='Tourism Growth Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Global Tourism Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Flight Impact on Growth'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_cleaned_Inbound_Tourism_Arrivals.csv+ (Multiple Connections)' name='federated.0100mdu08kc10s13g959s1as5vx9' />
          </datasources>
          <datasource-dependencies datasource='federated.0100mdu08kc10s13g959s1as5vx9'>
            <column datatype='string' name='[Arrival by Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Arrival by mode of transport]' role='dimension' type='nominal' />
            <column caption='Tourism Growth Rate (%)' datatype='real' name='[Calculation_748442019178061831]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ZN(SUM(IF INT([Pivot Field Names]) = 2022 THEN [Pivot Field Values] END)) &gt; 0 &#10;AND ZN(SUM(IF INT([Pivot Field Names]) = 2010 THEN [Pivot Field Values] END)) &gt; 0&#10;THEN &#10;    ((SUM(IF INT([Pivot Field Names]) = 2022 THEN [Pivot Field Values] END) - SUM(IF INT([Pivot Field Names]) = 2010 THEN [Pivot Field Values] END)) &#10;    / SUM(IF INT([Pivot Field Names]) = 2010 THEN [Pivot Field Values] END)) * 100&#10;ELSE NULL&#10;END' />
            </column>
            <column caption='Total Direct Flights' datatype='real' name='[Calculation_748442019178319880]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Country]: SUM(IF [Arrival by mode of transport] = &apos;Air&apos; THEN [Pivot Field Values] END) }' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;LAO PEOPLE´S DEMOCRATIC REPUBLIC&quot;' value='&quot;Dominican Republic&quot;' />
                <semantic-value key='&quot;SABA&quot;' value='&quot;Bonaire, Saint Eustatius and Saba&quot;' />
                <semantic-value key='&quot;SINT EUSTATIUS&quot;' value='&quot;Bonaire, Saint Eustatius and Saba&quot;' />
                <semantic-value key='&quot;TAIWAN PROVINCE OF CHINA&quot;' value='&quot;Taiwan&quot;' />
              </semantic-values>
            </column>
            <column caption='Flight Growth Category1' datatype='string' name='[Flight Growth Category]' role='dimension' type='nominal' />
            <column caption='Year' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
            <column caption='Tourist Arrivals' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Arrival by Region]' derivation='None' name='[none:Arrival by Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Flight Growth Category]' derivation='None' name='[none:Flight Growth Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_748442019178319880]' derivation='Sum' name='[sum:Calculation_748442019178319880:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_748442019178061831]' derivation='User' name='[usr:Calculation_748442019178061831:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0100mdu08kc10s13g959s1as5vx9].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action4_1C0D7A6640154A7FB75DCFE8C906A41C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0100mdu08kc10s13g959s1as5vx9].[sum:Calculation_748442019178319880:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0100mdu08kc10s13g959s1as5vx9].[usr:Calculation_748442019178061831:qk]' included-values='in-range'>
            <min>-98.32200049956981</min>
            <max>833.98894009216599</max>
          </filter>
          <slices>
            <column>[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by Region:nk]</column>
            <column>[federated.0100mdu08kc10s13g959s1as5vx9].[none:Flight Growth Category:nk]</column>
            <column>[federated.0100mdu08kc10s13g959s1as5vx9].[usr:Calculation_748442019178061831:qk]</column>
            <column>[federated.0100mdu08kc10s13g959s1as5vx9].[sum:Calculation_748442019178319880:qk]</column>
            <column>[federated.0100mdu08kc10s13g959s1as5vx9].[none:Year:qk]</column>
            <column>[federated.0100mdu08kc10s13g959s1as5vx9].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Flight Growth Category:nk]' />
              <lod column='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Country:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0100mdu08kc10s13g959s1as5vx9].[none:Country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Flight Growth Category:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0100mdu08kc10s13g959s1as5vx9].[none:Flight Growth Category:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Direct Flights:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0100mdu08kc10s13g959s1as5vx9].[sum:Calculation_748442019178319880:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Tourism Growth Rate (%):&#9;</run>
                <run bold='true'><![CDATA[<[federated.0100mdu08kc10s13g959s1as5vx9].[usr:Calculation_748442019178061831:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0100mdu08kc10s13g959s1as5vx9].[usr:Calculation_748442019178061831:qk]</rows>
        <cols>[federated.0100mdu08kc10s13g959s1as5vx9].[sum:Calculation_748442019178319880:qk]</cols>
      </table>
      <simple-id uuid='{2CEF2557-7659-4B97-8CD6-59C1C9E6AE13}' />
    </worksheet>
    <worksheet name='Tourism Growth Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_cleaned_Inbound_Tourism_Arrivals.csv+ (Multiple Connections)' name='federated.0100mdu08kc10s13g959s1as5vx9' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0100mdu08kc10s13g959s1as5vx9'>
            <column datatype='string' name='[Arrival by Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Arrival by mode of transport]' role='dimension' type='nominal' />
            <column caption='Flight Growth Category' datatype='string' name='[Calculation_748442019169021953]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM(IF [Arrival by mode of transport] = &apos;Air&apos; AND INT([Pivot Field Names]) = 2022 THEN [Pivot Field Values] END)&#10;   &gt; SUM(IF [Arrival by mode of transport] = &apos;Air&apos; AND INT([Pivot Field Names]) = 2010 THEN [Pivot Field Values] END) * 1.5&#10;THEN &quot;Low Increase in Direct Flights&quot;&#10;ELSE &quot;High Increase in Direct Flights&quot;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;LAO PEOPLE´S DEMOCRATIC REPUBLIC&quot;' value='&quot;Dominican Republic&quot;' />
                <semantic-value key='&quot;SABA&quot;' value='&quot;Bonaire, Saint Eustatius and Saba&quot;' />
                <semantic-value key='&quot;SINT EUSTATIUS&quot;' value='&quot;Bonaire, Saint Eustatius and Saba&quot;' />
                <semantic-value key='&quot;TAIWAN PROVINCE OF CHINA&quot;' value='&quot;Taiwan&quot;' />
              </semantic-values>
            </column>
            <column caption='Flight Growth Category1' datatype='string' name='[Flight Growth Category]' role='dimension' type='nominal' />
            <column caption='Year' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
            <column caption='Tourist Arrivals' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Arrival by Region]' derivation='None' name='[none:Arrival by Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Flight Growth Category]' derivation='None' name='[none:Flight Growth Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_748442019169021953]' derivation='User' name='[usr:Calculation_748442019169021953:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0100mdu08kc10s13g959s1as5vx9].[usr:Calculation_748442019169021953:nk]'>
            <groupfilter function='level-members' level='[usr:Calculation_748442019169021953:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by Region:nk]</column>
            <column>[federated.0100mdu08kc10s13g959s1as5vx9].[usr:Calculation_748442019169021953:nk]</column>
            <column>[federated.0100mdu08kc10s13g959s1as5vx9].[none:Flight Growth Category:nk]</column>
            <column>[federated.0100mdu08kc10s13g959s1as5vx9].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0100mdu08kc10s13g959s1as5vx9].[Longitude (generated)]' field-type='quantitative' max='20740149.825425677' min='-22575138.063494779' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0100mdu08kc10s13g959s1as5vx9].[Latitude (generated)]' field-type='quantitative' max='6335876.4531818284' min='125799.01955026443' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Zip Code Labels' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Country:nk]' />
              <color column='[federated.0100mdu08kc10s13g959s1as5vx9].[usr:Calculation_748442019169021953:nk]' />
              <geometry column='[federated.0100mdu08kc10s13g959s1as5vx9].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0100mdu08kc10s13g959s1as5vx9].[Latitude (generated)]</rows>
        <cols>[federated.0100mdu08kc10s13g959s1as5vx9].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AE1826DB-97B4-442B-8414-94564F0FD6AA}' />
    </worksheet>
    <worksheet name='Tourism Growth Trends'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_cleaned_Inbound_Tourism_Arrivals.csv+ (Multiple Connections)' name='federated.0100mdu08kc10s13g959s1as5vx9' />
          </datasources>
          <datasource-dependencies datasource='federated.0100mdu08kc10s13g959s1as5vx9'>
            <column datatype='string' name='[Arrival by Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Arrival by mode of transport]' role='dimension' type='nominal' />
            <column caption='Flight Growth Category' datatype='string' name='[Calculation_748442019169021953]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM(IF [Arrival by mode of transport] = &apos;Air&apos; AND INT([Pivot Field Names]) = 2022 THEN [Pivot Field Values] END)&#10;   &gt; SUM(IF [Arrival by mode of transport] = &apos;Air&apos; AND INT([Pivot Field Names]) = 2010 THEN [Pivot Field Values] END) * 1.5&#10;THEN &quot;Low Increase in Direct Flights&quot;&#10;ELSE &quot;High Increase in Direct Flights&quot;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;LAO PEOPLE´S DEMOCRATIC REPUBLIC&quot;' value='&quot;Dominican Republic&quot;' />
                <semantic-value key='&quot;SABA&quot;' value='&quot;Bonaire, Saint Eustatius and Saba&quot;' />
                <semantic-value key='&quot;SINT EUSTATIUS&quot;' value='&quot;Bonaire, Saint Eustatius and Saba&quot;' />
                <semantic-value key='&quot;TAIWAN PROVINCE OF CHINA&quot;' value='&quot;Taiwan&quot;' />
              </semantic-values>
            </column>
            <column caption='Flight Growth Category1' datatype='string' name='[Flight Growth Category]' role='dimension' type='nominal' />
            <column caption='Year' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
            <column caption='Tourist Arrivals' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column caption='Tourist Arrivals1' datatype='real' name='[Tourist Arrivals]' role='measure' type='quantitative' />
            <column caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Arrival by Region]' derivation='None' name='[none:Arrival by Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Flight Growth Category]' derivation='None' name='[none:Flight Growth Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tourist Arrivals]' derivation='Sum' name='[sum:Tourist Arrivals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_748442019169021953]' derivation='User' name='[usr:Calculation_748442019169021953:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0100mdu08kc10s13g959s1as5vx9].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action4_1C0D7A6640154A7FB75DCFE8C906A41C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by Region:nk]</column>
            <column>[federated.0100mdu08kc10s13g959s1as5vx9].[none:Flight Growth Category:nk]</column>
            <column>[federated.0100mdu08kc10s13g959s1as5vx9].[none:Year:qk]</column>
            <column>[federated.0100mdu08kc10s13g959s1as5vx9].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0100mdu08kc10s13g959s1as5vx9].[sum:Tourist Arrivals:qk]' scope='rows' value='Tourist Arrivals' />
            <format attr='title' class='0' field='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Year:qk]' scope='cols' value='Year' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Flight Growth Category:nk]' value='Flight Growth Category'>
              <formatted-text>
                <run>Flight Growth Category</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Flight Growth Category:nk]' value='Flight Growth Category'>
              <formatted-text>
                <run>Flight Growth Category</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Year:qk]' value='Year'>
              <formatted-text>
                <run>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Flight Growth Category:nk]' />
              <lod column='[federated.0100mdu08kc10s13g959s1as5vx9].[usr:Calculation_748442019169021953:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Flight Growth Category:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0100mdu08kc10s13g959s1as5vx9].[none:Flight Growth Category:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0100mdu08kc10s13g959s1as5vx9].[none:Year:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Tourist Arrivals:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0100mdu08kc10s13g959s1as5vx9].[sum:Tourist Arrivals:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0100mdu08kc10s13g959s1as5vx9].[sum:Tourist Arrivals:qk]</rows>
        <cols>[federated.0100mdu08kc10s13g959s1as5vx9].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{5167FB8A-B958-40CF-A359-4DF2975DA19F}' />
    </worksheet>
    <worksheet name='Tourism by Transport'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_cleaned_Inbound_Tourism_Arrivals.csv+ (Multiple Connections)' name='federated.0100mdu08kc10s13g959s1as5vx9' />
          </datasources>
          <datasource-dependencies datasource='federated.0100mdu08kc10s13g959s1as5vx9'>
            <column datatype='string' name='[Arrival by Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;LAO PEOPLE´S DEMOCRATIC REPUBLIC&quot;' value='&quot;Dominican Republic&quot;' />
                <semantic-value key='&quot;SABA&quot;' value='&quot;Bonaire, Saint Eustatius and Saba&quot;' />
                <semantic-value key='&quot;SINT EUSTATIUS&quot;' value='&quot;Bonaire, Saint Eustatius and Saba&quot;' />
                <semantic-value key='&quot;TAIWAN PROVINCE OF CHINA&quot;' value='&quot;Taiwan&quot;' />
              </semantic-values>
            </column>
            <column caption='Flight Growth Category1' datatype='string' name='[Flight Growth Category]' role='dimension' type='nominal' />
            <column caption='Tourist Arrivals1' datatype='real' name='[Tourist Arrivals]' role='measure' type='quantitative' />
            <column caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Arrival by Region]' derivation='None' name='[none:Arrival by Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv)]' derivation='None' name='[none:Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Flight Growth Category]' derivation='None' name='[none:Flight Growth Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tourist Arrivals]' derivation='Sum' name='[sum:Tourist Arrivals:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0100mdu08kc10s13g959s1as5vx9].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action4_1C0D7A6640154A7FB75DCFE8C906A41C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv):nk]' member='&quot;Air&quot;' />
              <groupfilter function='member' level='[none:Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv):nk]' member='&quot;Land&quot;' />
              <groupfilter function='member' level='[none:Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv):nk]' member='&quot;Water&quot;' />
            </groupfilter>
          </filter>
          <natural-sort column='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv):nk]' direction='DESC' />
          <slices>
            <column>[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by Region:nk]</column>
            <column>[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv):nk]</column>
            <column>[federated.0100mdu08kc10s13g959s1as5vx9].[none:Flight Growth Category:nk]</column>
            <column>[federated.0100mdu08kc10s13g959s1as5vx9].[none:Year:qk]</column>
            <column>[federated.0100mdu08kc10s13g959s1as5vx9].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0100mdu08kc10s13g959s1as5vx9].[sum:Tourist Arrivals:qk]' scope='rows' value='Tourist Arrivals' />
            <format attr='title' class='0' field='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Year:qk]' scope='cols' value='Year' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv):nk]' value='Arrival by mode of transport'>
              <formatted-text>
                <run>Arrival by mode of transport</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv):nk]' value='Arrival by mode of transport'>
              <formatted-text>
                <run>Arrival by mode of transport</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv):nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Arrival by mode of transport :&#9;</run>
                <run bold='true'><![CDATA[<[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv):nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0100mdu08kc10s13g959s1as5vx9].[none:Year:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Tourist Arrivals:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0100mdu08kc10s13g959s1as5vx9].[sum:Tourist Arrivals:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0100mdu08kc10s13g959s1as5vx9].[sum:Tourist Arrivals:qk]</rows>
        <cols>[federated.0100mdu08kc10s13g959s1as5vx9].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{7059A199-6730-4AC3-B637-79D53163A972}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Global Tourism Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='df_cleaned_Inbound_Tourism_Arrivals.csv+ (Multiple Connections)' name='federated.0100mdu08kc10s13g959s1as5vx9' />
      </datasources>
      <datasource-dependencies datasource='federated.0100mdu08kc10s13g959s1as5vx9'>
        <column datatype='string' name='[Arrival by Region]' role='dimension' type='nominal' />
        <column datatype='string' name='[Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv)]' role='dimension' type='nominal' />
        <column caption='Flight Growth Category1' datatype='string' name='[Flight Growth Category]' role='dimension' type='nominal' />
        <column caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Arrival by Region]' derivation='None' name='[none:Arrival by Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv)]' derivation='None' name='[none:Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv):nk]' pivot='key' type='nominal' />
        <column-instance column='[Flight Growth Category]' derivation='None' name='[none:Flight Growth Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='58' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98694' id='4' type-v2='layout-basic' w='99498' x='251' y='653'>
            <zone h='97388' id='46' param='vert' type-v2='layout-flow' w='98996' x='502' y='1306'>
              <zone h='3429' id='47' type-v2='title' w='98996' x='502' y='1306'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='93959' id='7' param='horz' type-v2='layout-flow' w='98996' x='502' y='4735'>
                <zone h='93959' id='5' type-v2='layout-basic' w='93971' x='502' y='4735'>
                  <zone h='35055' id='3' name='Tourism Growth Map' w='93971' x='502' y='4735'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='25446' id='12' name='Tourism Growth Trends' w='93971' x='502' y='57035'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='17245' id='16' name='Tourism by Transport' w='93971' x='502' y='39790'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='16213' id='33' name='Flight Impact on Growth' w='93971' x='502' y='82481'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='160' h='93959' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='5025' x='94473' y='4735'>
                  <zone h='4245' id='63' mode='checkdropdown' name='Tourism Growth Map' param='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by Region:nk]' type-v2='filter' values='database' w='5025' x='94473' y='4735'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='5633' id='14' name='Tourism Growth Trends' param='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Year:qk]' type-v2='filter' values='database' w='5025' x='94473' y='8980'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='4245' id='15' mode='checkdropdown' name='Tourism Growth Trends' param='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Flight Growth Category:nk]' type-v2='filter' values='database' w='5025' x='94473' y='14613'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='7020' id='17' name='Tourism by Transport' pane-specification-id='0' param='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv):nk]' type-v2='color' w='5025' x='94473' y='18858'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='8816' id='18' mode='typeinlist' name='Tourism by Transport' param='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv):nk]' type-v2='filter' values='database' w='5025' x='94473' y='25878'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='8' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='77' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98694' id='76' param='vert' type-v2='layout-flow' w='99498' x='251' y='653'>
                <zone h='3429' id='47' type-v2='title' w='98996' x='502' y='1306'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4245' id='63' mode='checkdropdown' name='Tourism Growth Map' param='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by Region:nk]' type-v2='filter' values='database' w='5025' x='94473' y='4735'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='272' h='35055' id='3' is-fixed='true' name='Tourism Growth Map' w='93971' x='502' y='4735'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8816' id='18' mode='checkdropdown' name='Tourism by Transport' param='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv):nk]' type-v2='filter' values='database' w='5025' x='94473' y='25878'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='130' h='17245' id='16' is-fixed='true' name='Tourism by Transport' w='93971' x='502' y='39790'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7020' id='17' name='Tourism by Transport' pane-specification-id='0' param='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv):nk]' type-v2='color' w='5025' x='94473' y='18858'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5633' id='14' name='Tourism Growth Trends' param='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Year:qk]' type-v2='filter' values='database' w='5025' x='94473' y='8980'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4245' id='15' mode='checkdropdown' name='Tourism Growth Trends' param='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Flight Growth Category:nk]' type-v2='filter' values='database' w='5025' x='94473' y='14613'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='196' h='25446' id='12' is-fixed='true' name='Tourism Growth Trends' w='93971' x='502' y='57035'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='122' h='16213' id='33' is-fixed='true' name='Flight Impact on Growth' w='93971' x='502' y='82481'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C418A931-E427-4098-BA71-6D1302C9441B}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Tourism Growth Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by Region:nk]' type='filter' />
            <card param='[federated.0100mdu08kc10s13g959s1as5vx9].[usr:Calculation_748442019169021953:nk]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0100mdu08kc10s13g959s1as5vx9].[usr:Calculation_748442019169021953:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by Region:nk]</field>
            <field>[federated.0100mdu08kc10s13g959s1as5vx9].[none:Country:nk]</field>
            <field>[federated.0100mdu08kc10s13g959s1as5vx9].[usr:Calculation_748442019169021953:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{5176628B-5C63-4911-943B-1FCA937BBCF1}' />
    </window>
    <window class='worksheet' name='Tourism Growth Trends'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Flight Growth Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0100mdu08kc10s13g959s1as5vx9].[none:Year:qk]</field>
            <field>[federated.0100mdu08kc10s13g959s1as5vx9].[usr:Calculation_748442019169021953:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{76C2EC36-22FB-48A0-A493-C6274ED7027B}' />
    </window>
    <window class='worksheet' name='Flight Impact on Growth'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by Region:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Flight Growth Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by Region:nk]</field>
            <field>[federated.0100mdu08kc10s13g959s1as5vx9].[none:Country:nk]</field>
            <field>[federated.0100mdu08kc10s13g959s1as5vx9].[none:Flight Growth Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{22AA8EC4-58D0-4B96-B864-A259D6739C1B}' />
    </window>
    <window class='worksheet' name='Tourism by Transport'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0100mdu08kc10s13g959s1as5vx9].[none:Flight Growth Category:nk]</field>
            <field>[federated.0100mdu08kc10s13g959s1as5vx9].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F99D4453-1272-475B-A576-89CA0656B3A3}' />
    </window>
    <window class='dashboard' maximized='true' name='Global Tourism Dashboard'>
      <viewpoints>
        <viewpoint name='Flight Impact on Growth'>
          <zoom type='entire-view' />
          <highlight field='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Flight Growth Category:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Tourism Growth Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.0100mdu08kc10s13g959s1as5vx9].[usr:Calculation_748442019169021953:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Tourism Growth Trends'>
          <highlight field='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Flight Growth Category:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Tourism by Transport'>
          <zoom type='entire-view' />
          <highlight field='[federated.0100mdu08kc10s13g959s1as5vx9].[none:Arrival by mode of transport (df_cleaned_Inbound_Tourism_Transport.csv):nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true'>
        <device name='Samsung Galaxy S Series' type='Phone' />
      </device-preview>
      <simple-id uuid='{53FAD1AA-99A2-4CA2-A71D-F711B5DDA3C0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Flight Impact on Growth' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Global Tourism Dashboard' width='384'>
      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
      DvoXV2V0B6sWwD0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Tourism Growth Map' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Tourism Growth Trends' width='384'>
      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
      4LVts5oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Tourism by Transport' width='384'>
      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
      sVxglC//93z3M8tPF2Drpje0a9Mbr2JYwGtpSZ8I9s033+jf/u3fVFZWpp/85CffuRWE4zi6
      c+eOfN/XG2+8Idu2lUwmtXr1atXW1mpiYkKjo6Oqq6tTWVmZksmkLMtSfX29Hj16pOrqak1O
      TqqkpESlpaWh/7IofIuVX9OatSs4EuD1l3MBRKNRnThxIrs831FAJpPJXiF88eJFxeNxlZeX
      q7e3V+3t7eru7tb27dvV3d2tLVu2aHx8XOl0WrZt6/r16zp48KBOnz6tjo6OEH41AKbbf/6y
      Wm7enHddxVtvSYZPqeZcAI7jqKenR5J069YttbS0fOczgcvKyhSNRtXb26vW1lbduHFDu3fv
      lm3bGh4elm3bamhoUH9/v5LJpA4ePKh0Oq3Lly/LcRz96le/UktLi0pLS+X7frZMfN+X67oh
      /tqFm+n7/qLrwx7z3M8MIzcf2zSM/Hxs08UygyBYVuZit1dZbqbvLf67+97St2mxZErS2rFx
      lY/cm3ddSfWagnme9v3mklq+/XbedeVbtsjduWfJmbls05wLIJFI6Pjx45Kk//iP/9DMzIwq
      K7/7ARVlZWVqbGzU6OjoMztw27azy0EQKBKJKAiC7BxvJBJRWVmZZmZmcv4FAeB1UDP+UBWL
      FFW+5FwAqVRKn376qaQn0z/zXQfw4MEDTU1NafXq1Uomk1qzZo36+vo0MDCgjo4O9fX1KZlM
      KggCNTY26sKFC8pkMnr77bd17do17d+/X11dXdq4ceMz5TJXIGHyPK8gM1/0zqp83ILbsqxQ
      cvOxTZ+23HHmY5sulhmJRJaVudibK5abaUUX/92t6NK3abFkSvnZpsWSmdM2zTVs1apVeuut
      t3T37l1t27Zt3usAysrK9OjRI3mep3379ikWi2lgYECtra0qLS3Vvn37NDIyon379qmsrExB
      EMiyLG3YsEHxeFyWZengwYPyPG/JvyxW3tMfMiM9e695PmQGKHw5F8DIyIj6+/t19OhR/ed/
      /qeam5tVUVHxzPckEgm99dZbz3zte9/7XvZxZWXlM6/sm5qaso+rq6slPSkaFAc+ZAYobjlf
      yZVIJDQ5Oalbt25pdnaWK4EBoMjlVACPHz9WEAT62c9+pmg0qk8++YR7AQFAkctpCmhgYED9
      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
    </thumbnail>
  </thumbnails>
</workbook>
